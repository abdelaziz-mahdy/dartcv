name: windows

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"

jobs:
  windows-x64:
    name: windows-x64
    strategy:
      matrix:
        osname:
          - {os: windows-2019, vs: vs2019}
          - {os: windows-2022, vs: vs2022}
    runs-on: ${{ matrix.osname.os }}
    env:
      PACKAGE_NAME: libdartcv-windows-x64-${{ matrix.osname.vs }}
    steps:
      - uses: actions/checkout@v4
      - name: build
        run: |
          mkdir -Force build && cd build
          cmake -S ${{ github.workspace }} `
            -DCMAKE_INSTALL_PREFIX=install `
            -DCMAKE_BUILD_TYPE=Release `
            -DDARTCV_WITH_VIDEOIO=ON `
            -DDARTCV_WITH_HIGHGUI=ON

          cmake --build . --config Release
      - uses: actions/upload-artifact@v4
        name: upload
        with:
          path: build/install
          name: ${{ env.PACKAGE_NAME }}
  windows-arm64:
    name: windows-arm64
    strategy:
      matrix:
        osname:
          - {os: windows-2019, vs: vs2019}
          - {os: windows-2022, vs: vs2022}
    runs-on: ${{ matrix.osname.os }}
    env:
      PACKAGE_NAME: libdartcv-windows-arm64-${{ matrix.osname.vs }}
    steps:
      - uses: actions/checkout@v4
      - name: build
        run: |
          mkdir -Force build && cd build
          cmake -S ${{ github.workspace }} `
            -DCMAKE_SYSTEM_NAME="Windows" `
            -DCMAKE_SYSTEM_PROCESSOR=ARM64 `
            -A ARM64 `
            -DCMAKE_INSTALL_PREFIX=install `
            -DCMAKE_BUILD_TYPE=Release `
            -DDARTCV_WITH_VIDEOIO=ON `
            -DDARTCV_WITH_HIGHGUI=ON

          cmake --build . --config Release
      - uses: actions/upload-artifact@v4
        name: upload
        with:
          path: build/install
          name: ${{ env.PACKAGE_NAME }}
