name: windows

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"

jobs:
  windows:
    strategy:
      matrix:
        os: [windows-2019, windows-2022]
    name: windows
    runs-on: ${{ matrix.os }}
    env:
      PACKAGE_NAME: libdartcv-windows-x64
    steps:
      - uses: actions/checkout@v4
      - name: build
        run: |
          mkdir -Force build && cd build
          cmake -S ${{ github.workspace }} `
            -DCMAKE_INSTALL_PREFIX=install `
            -DCMAKE_BUILD_TYPE=Release `
            -DDARTCV_WITH_VIDEOIO=ON `
            -DDARTCV_WITH_HIGHGUI=ON

          cmake --build . --config Release --target install
      - uses: actions/upload-artifact@v4
        name: upload
        with:
          path: build/install
          name: ${{ env.PACKAGE_NAME }}
  windows-arm64:
    strategy:
      matrix:
        os: [windows-2019, windows-2022]
    name: windows
    runs-on: ${{ matrix.os }}
    env:
      PACKAGE_NAME: libdartcv-windows-arm64
    steps:
      - uses: actions/checkout@v4
      - name: build
        run: |
          mkdir -Force build && cd build
          cmake -S ${{ github.workspace }} `
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/cmake/winarm64.toolchain.cmake `
            -DCMAKE_INSTALL_PREFIX=install `
            -DCMAKE_BUILD_TYPE=Release `
            -DDARTCV_WITH_VIDEOIO=ON `
            -DDARTCV_WITH_HIGHGUI=ON

          cmake --build . --config Release --target install
      - uses: actions/upload-artifact@v4
        name: upload
        with:
          path: build/install
          name: ${{ env.PACKAGE_NAME }}
